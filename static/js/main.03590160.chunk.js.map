{"version":3,"sources":["components/KanbanStatus.js","components/Modal.js","components/Form.js","components/index.js","serviceWorker.js","index.js"],"names":["KanbanStatus","getCardDom","props","status","deleteCard","map","item","id","description","date","assignee","className","key","onClick","openModal","this","card","React","PureComponent","Modal","children","showhide","style","Object","freeze","display","document","body","overflow","Form","hideModal","getFinalData","useState","desc","setDesc","setDate","setAssignee","setStatus","clearData","finalObj","Math","floor","random","disableCLass","length","type","name","placeholder","value","onChange","e","target","obj","updateStatusCard","Kanban","setState","prevState","tempStatus","state","deletItemIndex","findIndex","ele","splice","console","log","open","progress","done","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.03590160.chunk.js","sourcesContent":["import React from \"react\";\n\nclass KanbanStatus extends React.PureComponent {\n  getCardDom = () => {\n    const { status = [], deleteCard } = this.props;\n    return status.map((item) => {\n      const {\n        id = \"\",\n        description = \"\",\n        date = \"\",\n        assignee = \"\",\n        status = \"\",\n      } = item;\n      return (\n        <div className=\"card\" key={id}>\n          <div className=\"card-desc\">\n            Description: <span>{description}</span>\n          </div>\n          <div className=\"card-date\">\n            Due Date: <span>{date}</span>\n          </div>\n          <div className=\"card-assignee\">\n            <span className=\"material-icons\">account_circle</span>\n            {assignee}\n          </div>\n          <div className=\"editDelete\">\n            {/* <button >\n              <span className=\"material-icons\">create</span>\n            </button> */}\n            <button onClick={() => deleteCard(status, id)}>\n              <span className=\"material-icons\">delete</span>\n            </button>\n          </div>\n        </div>\n      );\n    });\n  };\n  render() {\n    const { openModal } = this.props;\n    const card = this.getCardDom();\n    return (\n      <div className=\"statusContainer\">\n        {card}\n        <div className=\"addTask\" onClick={openModal}>\n          <span className=\"material-icons\">add_circle_outline</span>\n          Add Task\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default KanbanStatus;\n","import React from \"react\";\n\nconst Modal = (props) => {\n    const {\n        children,\n        showhide = false\n    } = props;\n\n    const style = Object.freeze({\n            display: showhide ? 'flex' : 'none'\n    });\n    if(showhide){\n        document.body.style.overflow = 'hidden';\n    }else {\n        document.body.style.overflow = 'hidden';\n    }\n  return (\n    <div className=\"modal\" style={style}>\n      <div className=\"content\">{children}</div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from \"react\";\n\nconst Form = (props) => {\n  const { hideModal, getFinalData } = props;\n\n  const [desc, setDesc] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [assignee, setAssignee] = useState(\"\");\n  const [status, setStatus] = useState(\"open\");\n\n  const updateDescription = (e) => setDesc(e.target.value);\n  const updateDate = (e) => setDate(e.target.value);\n  const updateAssignee = (e) => setAssignee(e.target.value);\n  const updateStatus = (e) => setStatus(e.target.value);\n\n  const updateStatusCard = (obj = {}) => () => {\n    getFinalData(obj);\n    hideModal();\n    clearData();\n  };\n\n  const closeModal = () => {\n    hideModal();\n    clearData();\n  };\n\n  const clearData = () => {\n    setDesc(\"\");\n    setDate(\"\");\n    setAssignee(\"\");\n    setStatus(\"open\");\n  };\n  const isFormFilled = () => {\n    if (desc.length && date.length && assignee.length && status.length) {\n      return true;\n    }\n    return false;\n  };\n\n  const finalObj = {\n    id: Math.floor(Math.random() * 10000 + 1),\n    desc,\n    date,\n    assignee,\n    status,\n  };\n  const disableCLass = isFormFilled() ? \"\" : \"disableButton\";\n  return (\n    <div className=\"form\">\n      <input\n        type=\"text\"\n        name=\"description\"\n        placeholder=\"Description\"\n        value={desc}\n        onChange={updateDescription}\n      />\n      <input type=\"date\" name=\"date\" onChange={updateDate} value={date} />\n      <input\n        type=\"text\"\n        name=\"assignee\"\n        placeholder=\"Assignee\"\n        value={assignee}\n        onChange={updateAssignee}\n      />\n      <div className=\"dropDown\">\n        <select value={status} onChange={updateStatus}>\n          <option value=\"open\">Open</option>\n          <option value=\"progress\">In - Progress</option>\n          <option value=\"done\">Done</option>\n        </select>\n      </div>\n      <div className=\"button\">\n        <button className={disableCLass} onClick={updateStatusCard(finalObj)}>\n          Save\n        </button>\n        <button onClick={closeModal}>Cancel</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport KanbanStatus from \"./KanbanStatus\";\nimport Modal from \"./Modal\";\nimport Form from \"./Form\";\n\nclass Kanban extends React.PureComponent {\n  constructor() {\n    super();\n    this.state = {\n      open: [],\n      progress: [],\n      done: [],\n      showhide: false,\n    };\n  }\n\n  getFinalData = (obj) => {\n    const { id, desc, date, assignee, status } = obj;\n\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        [status]: [\n          {\n            id,\n            description: desc,\n            date,\n            assignee,\n            status:status\n          },\n          ...prevState[status],\n        ],\n      };\n    });\n  };\n  openModal = () => {\n    this.setState({\n      showhide: true,\n    });\n  };\n  hideModal = () => {\n    this.setState({\n      showhide: false,\n    });\n  };\n\n  deleteCard = (status, id) => {\n    let tempStatus = this.state[status];\n    const deletItemIndex = tempStatus.findIndex( ele => ele.id === id);\n    tempStatus.splice(deletItemIndex, 1);\n    console.log(tempStatus)\n    this.setState(prevState => {\n        return {\n            ...prevState,\n            [status]:tempStatus.length ? [...tempStatus] : []\n        }\n        \n    })\n  }\n  render() {\n    const {\n      open = [],\n      progress = [],\n      done = [],\n      showhide = false,\n    } = this.state;\n\n    return (\n      <>\n        <div className=\"header\">\n          <div className=\"header-name\">Kanban</div>\n          <div className=\"profile\">\n            <span className=\"material-icons\">account_circle</span>\n            AnshulJS\n          </div>\n        </div>\n        <div className=\"parentContainer\">\n          <div className=\"status\">\n            <h2 className=\"open\">Open</h2>\n            <KanbanStatus status={open} openModal={this.openModal} deleteCard={this.deleteCard} />\n          </div>\n          <div className=\"status\">\n            <h2 className=\"inprogress\">In - Progress</h2>\n            <KanbanStatus status={progress} openModal={this.openModal} deleteCard={this.deleteCard} />\n          </div>\n          <div className=\"status\">\n            <h2 className=\"done\">Done</h2>\n            <KanbanStatus status={done} openModal={this.openModal} deleteCard={this.deleteCard}/>\n          </div>\n        </div>\n        <Modal showhide={showhide}>\n          <Form getFinalData={this.getFinalData} hideModal={this.hideModal} />\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default Kanban;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"./scss/kanban.scss\";\nimport Kanban from './components';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Kanban />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}